version: "3"
services:
  db:
    build:
      context: ./.docker/postgres/
      dockerfile: Dockerfile
    ports:
      - ${DB_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
      LANG: ${DB_LANG:-ja_JP.UTF-8}
      TZ: ${TZ:-Asia/Tokyo}
    volumes:
      - ./.docker-volumes/postgres/data:/var/lib/postgresql/data
  adminer:
    image: adminer
    ports:
      - ${ADMINER_PORT:-8080}:8080
    environment:
      ADMINER_DEFAULT_SERVER: ${DB_HOST:-db}
      ADMINER_DEFAULT_USERNAME: ${DB_USER:-postgres}
      ADMINER_DEFAULT_PASSWORD: ${DB_PASSWORD:-postgres}
      ADMINER_DESIGN: ${ADMINER_DESIGN:-nette}
    depends_on:
      - db

  minio:
    image: minio/minio
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    volumes:
      - ./.docker-volumes/minio/data:/export
      - ./.docker-volumes/minio/config:/root/.minio
    environment:
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID:-minio}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY:-minio123}
    command: server /export --console-address ":9001"
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 ${AWS_ACCESS_KEY_ID:-minio} ${AWS_SECRET_ACCESS_KEY:-minio123}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/${S3_BUCKET_NAME:-mybucket} --region ${S3_REGION:-ap-northeast-1};
      /usr/bin/mc policy download myminio/${S3_BUCKET_NAME:-mybucket};
      exit 0;
      "

  mailhog:
    image: mailhog/mailhog
    ports:
      - ${MAILHOG_PORT:-1025}:1025
      - ${MAILHOG_CONSOLE_PORT:-8025}:8025
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /tmp/mailhog
