// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Member {
  id          Int        @id @default(autoincrement())
  name        String?     @unique
  email       String     @unique
  password    String
  authToken   String?
  profileIcon String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
  shops       Shop[]
  employees   Employee[]
}

model Shop {
  id         Int            @id @default(autoincrement())
  memberId   Int
  shopName   String         @unique
  shopUrl    String         @unique
  platformId Int
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  deletedAt  DateTime?
  member     Member         @relation(fields: [memberId], references: [id])
  platform   Platform       @relation(fields: [platformId], references: [id])
  employees  EmployeeShop[] // 多対多リレーションを追加
}

model Platform {
  id                       Int    @id @default(autoincrement())
  platformName             String @unique
  platformSpecificSettings String // 適切なデータ型に修正
  shops                    Shop[]
}

model Employee {
  id           Int            @id @default(autoincrement())
  memberId     Int
  employeeName String         @unique
  email        String         @unique
  password     String
  authToken    String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  member       Member         @relation(fields: [memberId], references: [id])
  shops        EmployeeShop[] // 多対多リレーションを追加
}

model EmployeeShop {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  shop       Shop     @relation(fields: [shopId], references: [id])
  shopId     Int
}
