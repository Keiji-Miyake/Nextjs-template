// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  ROOT
}

model SignUpVerification {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Member {
  id        String    @id @db.VarChar(8)
  email     String    @unique
  name      String?
  logo      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  users     User[]
  groups    Group[]
}

model User {
  id          Int       @id @default(autoincrement())
  memberId    String    @db.VarChar(8)
  name        String?
  email       String
  password    String
  role        Role      @default(USER)
  authToken   String?
  profileIcon String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  member      Member    @relation(fields: [memberId], references: [id])
  groups      Group[]
  sessions    Session[]
  @@unique(fields: [email, memberId], name: "UniqueMemberUser")
}

model Session {
  id        String   @id @default(cuid())
  userId    Int
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  memberId  String    @db.VarChar(8)
  member    Member    @relation(fields: [memberId], references: [id])
  users     User[] // 多対多リレーションを追加
}
